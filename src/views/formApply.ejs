<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    
    <!-- Font Awesome -->
    <link href="https://cdn.jsdelivr.net/gh/hung1001/font-awesome-pro@4cac1a6/css/all.css" rel="stylesheet" type="text/css" />
    <title><%= job.jobTitle %></title>

    <style>
        .error-message {
            color: red;
            font-size: 0.875em;
            margin-top: 0.25rem;
        }
        .responsive-font {
            font-size: 25px;
            line-height: 30px;
        }
        /* For medium screens (â‰¥768px) and larger, apply 64px font size */
        @media (min-width: 768px) {
            .responsive-font {
                font-size: 64px;
                line-height: 70px;
            }
        }
    </style>
</head>

<body class="px-5">
    <%- include('../views/nav.ejs') %>
    <div class="m-5" style="width: auto;">
        <h2 class="text-justify text-md-center responsive-font" style="font-weight: 700; word-wrap: break-word;"><%= job.jobTitle %></h2>
    </div>
    <div class="d-flex justify-content-center align-items-center m-auto">
        <div class="container p-5" style="border-radius: 50px; background: #f8f9fa; box-shadow:  20px 20px 60px #bebebe, -20px -20px 60px #ffffff;">
            <form id="jobApplicationForm" class="needs-validation" novalidate enctype="multipart/form-data">
                <div class="mb-3">
                    <label for="fullName" class="form-label">Name<span class="text-danger">*</span></label>
                    <input type="text" class="form-control" id="fullName" name="fullName" placeholder="Type your name" required>
                    <div class="error-message" id="fullNameError"></div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label for="email" class="form-label">Email<span class="text-danger">*</span></label>
                        <input type="email" class="form-control" id="email" name="email" required>
                        <div class="error-message" id="emailError"></div>
                    </div>
                    <div class="col-md-6">
                        <label for="phone" class="form-label">Phone Number<span class="text-danger">*</span></label>
                        <input type="tel" class="form-control" id="phone" name="phone" required>
                        <div class="error-message" id="phoneError"></div>
                    </div>
                </div>
                <div class="mb-3">
                    <label for="resume" class="form-label">Resume<span class="text-danger">*</span></label>
                    <input class="form-control" type="file" id="resume" name="resume" accept="application/pdf" required>
                    <div class="error-message" id="resumeError"></div>
                </div>
                <div class="d-grid gap-2 col-6 mx-auto">
                    <button type="submit" class="btn btn-primary btn-lg" id="applycv">Apply CV</button>
                </div>
            </form>
        </div>
    </div>
    <div class="foot">
        <%- include('../views/footer.ejs') %>
    </div>
</body>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('jobApplicationForm');
        const fullNameInput = document.getElementById('fullName');
        const emailInput = document.getElementById('email');
        const phoneInput = document.getElementById('phone');
        const resumeInput = document.getElementById('resume');

        const fullNameError = document.getElementById('fullNameError');
        const emailError = document.getElementById('emailError');
        const phoneError = document.getElementById('phoneError');
        const resumeError = document.getElementById('resumeError');

        const applycv = document.getElementById('applycv');

        form.addEventListener('submit', function(event) {
            event.preventDefault();
            event.stopPropagation();

            let isValid = true;

            // Validate Full Name
            if (fullNameInput.value.trim() === '') {
                fullNameError.textContent = 'Name is required';
                isValid = false;
            } else {
                fullNameError.textContent = '';
            }

            // Validate Email
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(emailInput.value)) {
                emailError.textContent = 'Valid email is required';
                isValid = false;
            } else {
                emailError.textContent = '';
            }

            // Validate Phone
            const phoneRegex = /^\+?[\d\s-]{10,}$/;
            if (!phoneRegex.test(phoneInput.value)) {
                phoneError.textContent = 'Valid phone number is required';
                isValid = false;
            } else {
                phoneError.textContent = '';
            }

            // Validate Resume
            if (resumeInput.files.length === 0) {
                resumeError.textContent = 'Resume is required';
                isValid = false;
            } else if (!resumeInput.files[0].type.match('application/pdf')) {
                resumeError.textContent = 'Resume must be a PDF file';
                isValid = false;
            } else {
                resumeError.textContent = '';
            }

            if (isValid) {
                submitFormWithAxios();
            } else {
                console.log('Form has errors. Please correct them.');
            }

            form.classList.add('was-validated');
        });

        function submitFormWithAxios() {
            const formData = new FormData(form);
            const jobId = '<%= job._id %>'; // Replace with actual job ID if needed

            //make loading animation while waiting for response
            const loading = document.createElement('div');
            //make loading middle of the button and disable the button
            loading.style.position = 'absolute';
            loading.style.top = '50%';
            loading.style.left = '50%';
            loading.style.transform = 'translate(-50%, -50%)';
            loading.innerHTML = '<div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div>';
            form.appendChild(loading);
            applycv.disabled = true;
            axios.post(`/cv/postFormApply/${jobId}`, formData, {
                    headers: {
                        'Content-Type': 'multipart/form-data'
                    }
                })
                .then(function(response) {
                    form.reset();
                    form.classList.remove('was-validated');
                    form.removeChild(loading);
                    applycv.disabled = false;
                    alert(response.data.message || 'Application submitted successfully!');
                })
                .catch(function(error) {
                    console.error('Error:', error);
                    alert('An error occurred while submitting the form. Please try again.');
                });
        }
    });
</script>
<script type="text/javascript">
    const msg = "<%= message %>";
    if (msg) {
        alert(msg)
    }
</script>

</html>